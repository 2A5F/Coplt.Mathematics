// generated by template, do not modify manually

namespace Coplt.Mathematics;

#region float2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2x2 mul([This] float2x2 a, float2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // float2x2

#region float2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2x2 mul([This] float2x3 a, float3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // float2x3

#region float2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2x2 mul([This] float2x4 a, float4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // float2x4

#region float3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3x2 mul([This] float3x2 a, float2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static float3x3 mul([This] float3x2 a, float2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // float3x2

#region float3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3x2 mul([This] float3x3 a, float3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static float3x3 mul([This] float3x3 a, float3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // float3x3

#region float3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3x2 mul([This] float3x4 a, float4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static float3x3 mul([This] float3x4 a, float4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // float3x4

#region float4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4x2 mul([This] float4x2 a, float2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static float4x3 mul([This] float4x2 a, float2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static float4x4 mul([This] float4x2 a, float2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // float4x2

#region float4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4x2 mul([This] float4x3 a, float3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static float4x3 mul([This] float4x3 a, float3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static float4x4 mul([This] float4x3 a, float3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // float4x3

#region float4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4x2 mul([This] float4x4 a, float4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static float4x3 mul([This] float4x4 a, float4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static float4x4 mul([This] float4x4 a, float4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // float4x4

#region double2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2x2 mul([This] double2x2 a, double2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // double2x2

#region double2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2x2 mul([This] double2x3 a, double3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // double2x3

#region double2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2x2 mul([This] double2x4 a, double4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // double2x4

#region double3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3x2 mul([This] double3x2 a, double2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static double3x3 mul([This] double3x2 a, double2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // double3x2

#region double3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3x2 mul([This] double3x3 a, double3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static double3x3 mul([This] double3x3 a, double3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // double3x3

#region double3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3x2 mul([This] double3x4 a, double4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static double3x3 mul([This] double3x4 a, double4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // double3x4

#region double4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4x2 mul([This] double4x2 a, double2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static double4x3 mul([This] double4x2 a, double2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static double4x4 mul([This] double4x2 a, double2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // double4x2

#region double4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4x2 mul([This] double4x3 a, double3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static double4x3 mul([This] double4x3 a, double3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static double4x4 mul([This] double4x3 a, double3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // double4x3

#region double4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4x2 mul([This] double4x4 a, double4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static double4x3 mul([This] double4x4 a, double4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static double4x4 mul([This] double4x4 a, double4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // double4x4

#region short2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short2x2 mul([This] short2x2 a, short2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // short2x2

#region short2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short2x2 mul([This] short2x3 a, short3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // short2x3

#region short2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short2x2 mul([This] short2x4 a, short4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // short2x4

#region short3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short3x2 mul([This] short3x2 a, short2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static short3x3 mul([This] short3x2 a, short2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // short3x2

#region short3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short3x2 mul([This] short3x3 a, short3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static short3x3 mul([This] short3x3 a, short3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // short3x3

#region short3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short3x2 mul([This] short3x4 a, short4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static short3x3 mul([This] short3x4 a, short4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // short3x4

#region short4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short4x2 mul([This] short4x2 a, short2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static short4x3 mul([This] short4x2 a, short2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static short4x4 mul([This] short4x2 a, short2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // short4x2

#region short4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short4x2 mul([This] short4x3 a, short3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static short4x3 mul([This] short4x3 a, short3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static short4x4 mul([This] short4x3 a, short3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // short4x3

#region short4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static short4x2 mul([This] short4x4 a, short4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static short4x3 mul([This] short4x4 a, short4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static short4x4 mul([This] short4x4 a, short4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // short4x4

#region ushort2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort2x2 mul([This] ushort2x2 a, ushort2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // ushort2x2

#region ushort2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort2x2 mul([This] ushort2x3 a, ushort3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // ushort2x3

#region ushort2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort2x2 mul([This] ushort2x4 a, ushort4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // ushort2x4

#region ushort3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort3x2 mul([This] ushort3x2 a, ushort2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static ushort3x3 mul([This] ushort3x2 a, ushort2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // ushort3x2

#region ushort3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort3x2 mul([This] ushort3x3 a, ushort3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static ushort3x3 mul([This] ushort3x3 a, ushort3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // ushort3x3

#region ushort3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort3x2 mul([This] ushort3x4 a, ushort4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static ushort3x3 mul([This] ushort3x4 a, ushort4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // ushort3x4

#region ushort4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort4x2 mul([This] ushort4x2 a, ushort2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static ushort4x3 mul([This] ushort4x2 a, ushort2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static ushort4x4 mul([This] ushort4x2 a, ushort2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // ushort4x2

#region ushort4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort4x2 mul([This] ushort4x3 a, ushort3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static ushort4x3 mul([This] ushort4x3 a, ushort3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static ushort4x4 mul([This] ushort4x3 a, ushort3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // ushort4x3

#region ushort4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ushort4x2 mul([This] ushort4x4 a, ushort4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static ushort4x3 mul([This] ushort4x4 a, ushort4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static ushort4x4 mul([This] ushort4x4 a, ushort4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // ushort4x4

#region int2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int2x2 mul([This] int2x2 a, int2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // int2x2

#region int2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int2x2 mul([This] int2x3 a, int3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // int2x3

#region int2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int2x2 mul([This] int2x4 a, int4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // int2x4

#region int3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int3x2 mul([This] int3x2 a, int2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static int3x3 mul([This] int3x2 a, int2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // int3x2

#region int3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int3x2 mul([This] int3x3 a, int3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static int3x3 mul([This] int3x3 a, int3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // int3x3

#region int3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int3x2 mul([This] int3x4 a, int4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static int3x3 mul([This] int3x4 a, int4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // int3x4

#region int4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int4x2 mul([This] int4x2 a, int2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static int4x3 mul([This] int4x2 a, int2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static int4x4 mul([This] int4x2 a, int2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // int4x2

#region int4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int4x2 mul([This] int4x3 a, int3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static int4x3 mul([This] int4x3 a, int3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static int4x4 mul([This] int4x3 a, int3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // int4x3

#region int4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static int4x2 mul([This] int4x4 a, int4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static int4x3 mul([This] int4x4 a, int4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static int4x4 mul([This] int4x4 a, int4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // int4x4

#region uint2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint2x2 mul([This] uint2x2 a, uint2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // uint2x2

#region uint2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint2x2 mul([This] uint2x3 a, uint3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // uint2x3

#region uint2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint2x2 mul([This] uint2x4 a, uint4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // uint2x4

#region uint3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint3x2 mul([This] uint3x2 a, uint2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static uint3x3 mul([This] uint3x2 a, uint2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // uint3x2

#region uint3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint3x2 mul([This] uint3x3 a, uint3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static uint3x3 mul([This] uint3x3 a, uint3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // uint3x3

#region uint3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint3x2 mul([This] uint3x4 a, uint4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static uint3x3 mul([This] uint3x4 a, uint4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // uint3x4

#region uint4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint4x2 mul([This] uint4x2 a, uint2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static uint4x3 mul([This] uint4x2 a, uint2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static uint4x4 mul([This] uint4x2 a, uint2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // uint4x2

#region uint4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint4x2 mul([This] uint4x3 a, uint3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static uint4x3 mul([This] uint4x3 a, uint3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static uint4x4 mul([This] uint4x3 a, uint3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // uint4x3

#region uint4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static uint4x2 mul([This] uint4x4 a, uint4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static uint4x3 mul([This] uint4x4 a, uint4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static uint4x4 mul([This] uint4x4 a, uint4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // uint4x4

#region long2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long2x2 mul([This] long2x2 a, long2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // long2x2

#region long2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long2x2 mul([This] long2x3 a, long3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // long2x3

#region long2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long2x2 mul([This] long2x4 a, long4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // long2x4

#region long3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long3x2 mul([This] long3x2 a, long2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static long3x3 mul([This] long3x2 a, long2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // long3x2

#region long3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long3x2 mul([This] long3x3 a, long3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static long3x3 mul([This] long3x3 a, long3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // long3x3

#region long3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long3x2 mul([This] long3x4 a, long4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static long3x3 mul([This] long3x4 a, long4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // long3x4

#region long4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long4x2 mul([This] long4x2 a, long2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static long4x3 mul([This] long4x2 a, long2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static long4x4 mul([This] long4x2 a, long2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // long4x2

#region long4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long4x2 mul([This] long4x3 a, long3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static long4x3 mul([This] long4x3 a, long3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static long4x4 mul([This] long4x3 a, long3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // long4x3

#region long4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static long4x2 mul([This] long4x4 a, long4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static long4x3 mul([This] long4x4 a, long4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static long4x4 mul([This] long4x4 a, long4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // long4x4

#region ulong2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong2x2 mul([This] ulong2x2 a, ulong2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // ulong2x2

#region ulong2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong2x2 mul([This] ulong2x3 a, ulong3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // ulong2x3

#region ulong2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong2x2 mul([This] ulong2x4 a, ulong4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // ulong2x4

#region ulong3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong3x2 mul([This] ulong3x2 a, ulong2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static ulong3x3 mul([This] ulong3x2 a, ulong2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // ulong3x2

#region ulong3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong3x2 mul([This] ulong3x3 a, ulong3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static ulong3x3 mul([This] ulong3x3 a, ulong3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // ulong3x3

#region ulong3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong3x2 mul([This] ulong3x4 a, ulong4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static ulong3x3 mul([This] ulong3x4 a, ulong4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // ulong3x4

#region ulong4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong4x2 mul([This] ulong4x2 a, ulong2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static ulong4x3 mul([This] ulong4x2 a, ulong2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static ulong4x4 mul([This] ulong4x2 a, ulong2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // ulong4x2

#region ulong4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong4x2 mul([This] ulong4x3 a, ulong3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static ulong4x3 mul([This] ulong4x3 a, ulong3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static ulong4x4 mul([This] ulong4x3 a, ulong3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // ulong4x3

#region ulong4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static ulong4x2 mul([This] ulong4x4 a, ulong4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static ulong4x3 mul([This] ulong4x4 a, ulong4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static ulong4x4 mul([This] ulong4x4 a, ulong4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // ulong4x4

#region decimal2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal2x2 mul([This] decimal2x2 a, decimal2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // decimal2x2

#region decimal2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal2x2 mul([This] decimal2x3 a, decimal3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // decimal2x3

#region decimal2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal2x2 mul([This] decimal2x4 a, decimal4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // decimal2x4

#region decimal3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal3x2 mul([This] decimal3x2 a, decimal2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static decimal3x3 mul([This] decimal3x2 a, decimal2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // decimal3x2

#region decimal3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal3x2 mul([This] decimal3x3 a, decimal3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static decimal3x3 mul([This] decimal3x3 a, decimal3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // decimal3x3

#region decimal3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal3x2 mul([This] decimal3x4 a, decimal4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static decimal3x3 mul([This] decimal3x4 a, decimal4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // decimal3x4

#region decimal4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal4x2 mul([This] decimal4x2 a, decimal2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static decimal4x3 mul([This] decimal4x2 a, decimal2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static decimal4x4 mul([This] decimal4x2 a, decimal2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // decimal4x2

#region decimal4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal4x2 mul([This] decimal4x3 a, decimal3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static decimal4x3 mul([This] decimal4x3 a, decimal3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static decimal4x4 mul([This] decimal4x3 a, decimal3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // decimal4x3

#region decimal4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static decimal4x2 mul([This] decimal4x4 a, decimal4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static decimal4x3 mul([This] decimal4x4 a, decimal4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static decimal4x4 mul([This] decimal4x4 a, decimal4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // decimal4x4

#region half2x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half2x2 mul([This] half2x2 a, half2x2 b)
        => new(
            fma(a.c1, b.c0.yy, a.c0 * b.c0.xx), // a.c0 * b.c0.xx + a.c1 * b.c0.yy
            fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)  // a.c0 * b.c1.xx + a.c1 * b.c1.yy
        );
}

#endregion // half2x2

#region half2x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half2x2 mul([This] half2x3 a, half3x2 b)
        => new(
            fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx)), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz
            fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz
        );
}

#endregion // half2x3

#region half2x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half2x2 mul([This] half2x4 a, half4x2 b)
        => new(
            fma(a.c3, b.c0.ww, fma(a.c2, b.c0.zz, fma(a.c1, b.c0.yy, a.c0 * b.c0.xx))), // a.c0 * b.c0.xx + a.c1 * b.c0.yy + a.c2 * b.c0.zz + a.c3 * b.c0.ww
            fma(a.c3, b.c1.ww, fma(a.c2, b.c1.zz, fma(a.c1, b.c1.yy, a.c0 * b.c1.xx)))  // a.c0 * b.c1.xx + a.c1 * b.c1.yy + a.c2 * b.c1.zz + a.c3 * b.c1.ww
        );
}

#endregion // half2x4

#region half3x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half3x2 mul([This] half3x2 a, half2x2 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
        );
    [MethodImpl(256 | 512)]
    public static half3x3 mul([This] half3x2 a, half2x3 b)
        => new(
            fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy
            fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy
            fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy
        );
}

#endregion // half3x2

#region half3x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half3x2 mul([This] half3x3 a, half3x2 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
        );
    [MethodImpl(256 | 512)]
    public static half3x3 mul([This] half3x3 a, half3x3 b)
        => new(
            fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx)), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz
            fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz
            fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz
        );
}

#endregion // half3x3

#region half3x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half3x2 mul([This] half3x4 a, half4x2 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx)))  // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
        );
    [MethodImpl(256 | 512)]
    public static half3x3 mul([This] half3x4 a, half4x3 b)
        => new(
            fma(a.c3, b.c0.www, fma(a.c2, b.c0.zzz, fma(a.c1, b.c0.yyy, a.c0 * b.c0.xxx))), // a.c0 * b.c0.xxx + a.c1 * b.c0.yyy + a.c2 * b.c0.zzz + a.c3 * b.c0.www
            fma(a.c3, b.c1.www, fma(a.c2, b.c1.zzz, fma(a.c1, b.c1.yyy, a.c0 * b.c1.xxx))), // a.c0 * b.c1.xxx + a.c1 * b.c1.yyy + a.c2 * b.c1.zzz + a.c3 * b.c1.www
            fma(a.c3, b.c2.www, fma(a.c2, b.c2.zzz, fma(a.c1, b.c2.yyy, a.c0 * b.c2.xxx)))  // a.c0 * b.c2.xxx + a.c1 * b.c2.yyy + a.c2 * b.c2.zzz + a.c3 * b.c2.www
        );
}

#endregion // half3x4

#region half4x2

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half4x2 mul([This] half4x2 a, half2x2 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
        );
    [MethodImpl(256 | 512)]
    public static half4x3 mul([This] half4x2 a, half2x3 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
        );
    [MethodImpl(256 | 512)]
    public static half4x4 mul([This] half4x2 a, half2x4 b)
        => new(
            fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy
            fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy
            fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy
            fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy
        );
}

#endregion // half4x2

#region half4x3

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half4x2 mul([This] half4x3 a, half3x2 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
        );
    [MethodImpl(256 | 512)]
    public static half4x3 mul([This] half4x3 a, half3x3 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
        );
    [MethodImpl(256 | 512)]
    public static half4x4 mul([This] half4x3 a, half3x4 b)
        => new(
            fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx)), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz
            fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz
            fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz
            fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz
        );
}

#endregion // half4x3

#region half4x4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static half4x2 mul([This] half4x4 a, half4x2 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx)))  // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
        );
    [MethodImpl(256 | 512)]
    public static half4x3 mul([This] half4x4 a, half4x3 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx)))  // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
        );
    [MethodImpl(256 | 512)]
    public static half4x4 mul([This] half4x4 a, half4x4 b)
        => new(
            fma(a.c3, b.c0.wwww, fma(a.c2, b.c0.zzzz, fma(a.c1, b.c0.yyyy, a.c0 * b.c0.xxxx))), // a.c0 * b.c0.xxxx + a.c1 * b.c0.yyyy + a.c2 * b.c0.zzzz + a.c3 * b.c0.wwww
            fma(a.c3, b.c1.wwww, fma(a.c2, b.c1.zzzz, fma(a.c1, b.c1.yyyy, a.c0 * b.c1.xxxx))), // a.c0 * b.c1.xxxx + a.c1 * b.c1.yyyy + a.c2 * b.c1.zzzz + a.c3 * b.c1.wwww
            fma(a.c3, b.c2.wwww, fma(a.c2, b.c2.zzzz, fma(a.c1, b.c2.yyyy, a.c0 * b.c2.xxxx))), // a.c0 * b.c2.xxxx + a.c1 * b.c2.yyyy + a.c2 * b.c2.zzzz + a.c3 * b.c2.wwww
            fma(a.c3, b.c3.wwww, fma(a.c2, b.c3.zzzz, fma(a.c1, b.c3.yyyy, a.c0 * b.c3.xxxx)))  // a.c0 * b.c3.xxxx + a.c1 * b.c3.yyyy + a.c2 * b.c3.zzzz + a.c3 * b.c3.wwww
        );
}

#endregion // half4x4
