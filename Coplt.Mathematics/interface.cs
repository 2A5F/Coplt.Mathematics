// generated by template, do not modify manually

namespace Coplt.Mathematics;

public interface IVectorBitops;

public interface IVector 
{
    #if NET8_0_OR_GREATER
    public static abstract bool IsSimdAccelerated { get; }
    public static abstract int Length { get; }
    public static abstract int SizeByte { get; }
    public static abstract int SizeBit { get; }
    #endif
}

public interface IVector2 : IVector;
public interface IVector3 : IVector;
public interface IVector4 : IVector;

public interface IVector<T> : IVector;

public interface IVector2<T> : IVector<T>, IVector2;
public interface IVector3<T> : IVector<T>, IVector3;
public interface IVector4<T> : IVector<T>, IVector4;

public interface IVectorSelf<out Self> where Self : IVectorSelf<Self>
{
#if NET8_0_OR_GREATER
    public static abstract Self Zero { get; }
    public static abstract Self One { get; }
#endif
}

public interface IMatrixBitops;

public interface IMatrix
{
    #if NET8_0_OR_GREATER
    public static abstract bool IsSimdAccelerated { get; }
    public static abstract int Length { get; }
    public static abstract int2 Size { get; }
    #endif
}

public interface IMatrix<T> : IMatrix;

public interface IMatrix2x2 : IMatrix;
public interface IMatrix2x2<T> : IMatrix<T>, IMatrix2x2;
public interface IMatrix2x3 : IMatrix;
public interface IMatrix2x3<T> : IMatrix<T>, IMatrix2x3;
public interface IMatrix2x4 : IMatrix;
public interface IMatrix2x4<T> : IMatrix<T>, IMatrix2x4;
public interface IMatrix3x2 : IMatrix;
public interface IMatrix3x2<T> : IMatrix<T>, IMatrix3x2;
public interface IMatrix3x3 : IMatrix;
public interface IMatrix3x3<T> : IMatrix<T>, IMatrix3x3;
public interface IMatrix3x4 : IMatrix;
public interface IMatrix3x4<T> : IMatrix<T>, IMatrix3x4;
public interface IMatrix4x2 : IMatrix;
public interface IMatrix4x2<T> : IMatrix<T>, IMatrix4x2;
public interface IMatrix4x3 : IMatrix;
public interface IMatrix4x3<T> : IMatrix<T>, IMatrix4x3;
public interface IMatrix4x4 : IMatrix;
public interface IMatrix4x4<T> : IMatrix<T>, IMatrix4x4;

public interface IMatrixSelf<out Self> where Self : IMatrixSelf<Self>
{
#if NET8_0_OR_GREATER
    public static abstract Self Zero { get; }
    public static abstract Self One { get; }
    public static abstract Self Identity { get; }
#endif
}
