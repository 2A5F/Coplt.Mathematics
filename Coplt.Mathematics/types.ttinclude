<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#+
    public record struct Typ(
        string name, string Type, int size, string one, bool arith = false, bool f = false, bool i = false, bool simd = false, string shuffleCast = "", bool formattable = true,
        bool bitop = true, bool shift = true, bool sig = false)
    {
        public string compType { get; set; } = name;
        public string simdComp { get; set; } = name;

        public static string[] xyzw = { "x", "y", "z", "w" };
        public static string[] rgba = { "r", "g", "b", "a" };

        public static Typ[] Typs =
        {
            new("float", nameof(Single), sizeof(float), "1.0f", arith: true, sig: true, f: true, simd: true),
            new("double", nameof(Double), sizeof(double), "1.0", arith: true, sig: true, f: true, simd: true),
            new("int", nameof(Int32), sizeof(int), "1", arith: true, sig: true, i: true, simd: true),
            new("uint", nameof(UInt32), sizeof(uint), "1u", arith: true, i: true, simd: true, shuffleCast: "(uint)"),
            new("long", nameof(Int64), sizeof(long), "1L", arith: true,sig: true,  i: true, simd: true),
            new("ulong", nameof(UInt64), sizeof(ulong), "1UL", arith: true, i: true, simd: true, shuffleCast: "(ulong)"),
            new("decimal", nameof(Decimal), sizeof(decimal), "1m", arith: true, sig: true, bitop: false),
            new("half", "Half", sizeof(ushort), "(half)1.0", arith: true, sig: true, f: true),
            new("b16v", nameof(UInt16), sizeof(ushort), "true", shift: false) { compType = "b16", },
            new("b32v", nameof(UInt32), sizeof(uint), "true", simd: true, shuffleCast: "(uint)", shift: false) { compType = "b32", simdComp = "uint" },
            new("b64v", nameof(UInt64), sizeof(ulong), "true", simd: true, shuffleCast: "(ulong)", shift: false) { compType = "b64", simdComp = "ulong" },
        };

        public static Dictionary<string, string[]> ExplicitConverts = new()
        {
            { "int", [ "uint", "ulong", "half"] },
            { "uint", ["int", "half"] },
            { "long", [ "uint", "int", "ulong", "half"] },
            { "ulong", [ "uint", "int", "long", "half"] },
            { "float", [ "uint", "int", "ulong", "long", "decimal", "half"] },
            { "double", [ "uint", "int", "ulong", "long", "float", "decimal", "half"] },
            { "decimal", [ "uint", "int", "ulong", "long", "float", "double"] },
            { "half", [ "uint", "int", "ulong", "long"] },
            { "b16v", [ "uint", "int", "ulong", "long", "float", "double", "decimal", "half", "b32v", "b64v"] },
            { "b32v", [ "uint", "int", "ulong", "long", "float", "double", "decimal", "half", "b16v", "b64v"] },
            { "b64v", [ "uint", "int", "ulong", "long", "float", "double", "decimal", "half", "b16v", "b32v"] },
        };
        public static Dictionary<string, string[]> ImplicitConverts = new()
        {
            { "int", [ "long", "float", "double", "decimal"] },
            { "uint", [ "long", "ulong", "float", "double", "decimal"] },
            { "long", [ "double", "decimal"] },
            { "ulong", [ "double", "decimal"] },
            { "float", [ "double"] },
            { "half", [ "float", "double"] },
        };
    }
#>
