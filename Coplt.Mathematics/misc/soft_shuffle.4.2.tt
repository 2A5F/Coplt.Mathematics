<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics;
<#
    int[] a0123 = [0,1,2,3];
    var car_pd_3 = (
        from a in a0123.AsParallel().AsOrdered()
        from b in a0123.AsParallel().AsOrdered()
        select (a, b)
        ).ToList();
#>

internal static partial class soft_shuffle
{    
    [MethodImpl(256 | 512)]
    public static V Shuffle<T, V>(V a, V b, Shuffle42 lh) where V : struct, IVector4Components<T>
    {
        V r = new();
        switch (lh)
        {
<#
    foreach (var tuple1 in car_pd_3)
    {
        foreach (var tuple2 in car_pd_3)
        {
            var (a, b) = tuple1;
            var (c,d) = tuple2;

            var xyzw = $"{Typ.xyzw[a]}{Typ.xyzw[b]}_{Typ.xyzw[c]}{Typ.xyzw[d]}";
#>
            case Shuffle42.<#= xyzw #>:
                r.x = a.<#= Typ.xyzw[a] #>;
                r.y = a.<#= Typ.xyzw[b] #>;
                r.z = b.<#= Typ.xyzw[c] #>;
                r.w = b.<#= Typ.xyzw[d] #>;
                break;
<#
        }
    }
#>
            default:
                throw new ArgumentOutOfRangeException(nameof(lh), lh, null);
        }
        return r;
    }
}
<#

#>
