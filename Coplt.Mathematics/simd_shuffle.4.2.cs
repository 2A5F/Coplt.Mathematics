// generated by template, do not modify manually
#if NET8_0_OR_GREATER

using System.Runtime.Intrinsics.X86;
using System.Runtime.Intrinsics.Arm;

namespace Coplt.Mathematics.Simd;

public static partial class simd_shuffle
{

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 4, 4, 0, 0, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 4, 5, 0, 0, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 4, 6, 0, 0, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 4, 7, 0, 0, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 5, 4, 0, 0, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 5, 5, 0, 0, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 5, 6, 0, 0, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 5, 7, 0, 0, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 6, 4, 0, 0, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 6, 5, 0, 0, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 6, 6, 0, 0, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 6, 7, 0, 0, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 7, 4, 0, 0, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 7, 5, 0, 0, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 7, 6, 0, 0, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xx_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xx_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xx_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xx_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xx_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 0, 7, 7, 0, 0, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 0, 0, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 4, 4, 0, 1, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 4, 5, 0, 1, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 4, 6, 0, 1, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 4, 7, 0, 1, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 5, 4, 0, 1, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 5, 5, 0, 1, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 5, 6, 0, 1, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 5, 7, 0, 1, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 6, 4, 0, 1, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 6, 5, 0, 1, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 6, 6, 0, 1, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 6, 7, 0, 1, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 7, 4, 0, 1, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 7, 5, 0, 1, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 7, 6, 0, 1, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xy_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xy_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xy_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xy_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xy_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 1, 7, 7, 0, 1, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 1, 0, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 4, 4, 0, 2, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 4, 5, 0, 2, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 4, 6, 0, 2, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 4, 7, 0, 2, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 5, 4, 0, 2, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 5, 5, 0, 2, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 5, 6, 0, 2, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 5, 7, 0, 2, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 6, 4, 0, 2, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 6, 5, 0, 2, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 6, 6, 0, 2, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 6, 7, 0, 2, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 7, 4, 0, 2, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 7, 5, 0, 2, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 7, 6, 0, 2, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xz_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xz_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xz_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xz_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xz_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111000);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 2, 7, 7, 0, 2, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 2, 0, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 4, 4, 0, 3, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 4, 5, 0, 3, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 4, 6, 0, 3, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 4, 7, 0, 3, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 5, 4, 0, 3, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 5, 5, 0, 3, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 5, 6, 0, 3, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 5, 7, 0, 3, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 6, 4, 0, 3, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 6, 5, 0, 3, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 6, 6, 0, 3, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 6, 7, 0, 3, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 7, 4, 0, 3, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 7, 5, 0, 3, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 7, 6, 0, 3, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_xw_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_xw_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_xw_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_xw_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_xw_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111100);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(0, 3, 7, 7, 0, 3, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(0, 3, 0, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 4, 4, 1, 0, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 4, 5, 1, 0, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 4, 6, 1, 0, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 4, 7, 1, 0, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 5, 4, 1, 0, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 5, 5, 1, 0, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 5, 6, 1, 0, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 5, 7, 1, 0, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 6, 4, 1, 0, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 6, 5, 1, 0, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 6, 6, 1, 0, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 6, 7, 1, 0, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 7, 4, 1, 0, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 7, 5, 1, 0, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 7, 6, 1, 0, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yx_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yx_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yx_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yx_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yx_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 0, 7, 7, 1, 0, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 0, 1, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 4, 4, 1, 1, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 4, 5, 1, 1, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 4, 6, 1, 1, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 4, 7, 1, 1, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 5, 4, 1, 1, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 5, 5, 1, 1, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 5, 6, 1, 1, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 5, 7, 1, 1, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 6, 4, 1, 1, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 6, 5, 1, 1, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 6, 6, 1, 1, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 6, 7, 1, 1, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 7, 4, 1, 1, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 7, 5, 1, 1, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 7, 6, 1, 1, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yy_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yy_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yy_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yy_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yy_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 1, 7, 7, 1, 1, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 1, 1, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 4, 4, 1, 2, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 4, 5, 1, 2, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 4, 6, 1, 2, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 4, 7, 1, 2, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 5, 4, 1, 2, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 5, 5, 1, 2, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 5, 6, 1, 2, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 5, 7, 1, 2, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 6, 4, 1, 2, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 6, 5, 1, 2, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 6, 6, 1, 2, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 6, 7, 1, 2, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 7, 4, 1, 2, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 7, 5, 1, 2, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 7, 6, 1, 2, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yz_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yz_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yz_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yz_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yz_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111001);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 2, 7, 7, 1, 2, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 2, 1, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 4, 4, 1, 3, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 4, 5, 1, 3, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 4, 6, 1, 3, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 4, 7, 1, 3, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 5, 4, 1, 3, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 5, 5, 1, 3, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 5, 6, 1, 3, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 5, 7, 1, 3, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 6, 4, 1, 3, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 6, 5, 1, 3, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 6, 6, 1, 3, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 6, 7, 1, 3, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 7, 4, 1, 3, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 7, 5, 1, 3, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 7, 6, 1, 3, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_yw_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_yw_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_yw_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_yw_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_yw_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111101);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(1, 3, 7, 7, 1, 3, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(1, 3, 1, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 4, 4, 2, 0, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 4, 5, 2, 0, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 4, 6, 2, 0, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 4, 7, 2, 0, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 5, 4, 2, 0, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 5, 5, 2, 0, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 5, 6, 2, 0, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 5, 7, 2, 0, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 6, 4, 2, 0, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 6, 5, 2, 0, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 6, 6, 2, 0, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 6, 7, 2, 0, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 7, 4, 2, 0, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 7, 5, 2, 0, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 7, 6, 2, 0, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zx_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zx_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zx_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zx_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zx_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 0, 7, 7, 2, 0, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 0, 2, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 4, 4, 2, 1, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 4, 5, 2, 1, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 4, 6, 2, 1, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 4, 7, 2, 1, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 5, 4, 2, 1, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 5, 5, 2, 1, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 5, 6, 2, 1, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 5, 7, 2, 1, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 6, 4, 2, 1, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 6, 5, 2, 1, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 6, 6, 2, 1, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 6, 7, 2, 1, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 7, 4, 2, 1, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 7, 5, 2, 1, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 7, 6, 2, 1, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zy_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zy_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zy_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zy_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zy_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 1, 7, 7, 2, 1, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 1, 2, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 4, 4, 2, 2, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 4, 5, 2, 2, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 4, 6, 2, 2, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 4, 7, 2, 2, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 5, 4, 2, 2, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 5, 5, 2, 2, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 5, 6, 2, 2, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 5, 7, 2, 2, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 6, 4, 2, 2, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 6, 5, 2, 2, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 6, 6, 2, 2, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 6, 7, 2, 2, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 7, 4, 2, 2, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 7, 5, 2, 2, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 7, 6, 2, 2, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zz_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zz_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zz_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zz_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zz_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111010);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 2, 7, 7, 2, 2, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 2, 2, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 4, 4, 2, 3, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 4, 5, 2, 3, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 4, 6, 2, 3, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 4, 7, 2, 3, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 5, 4, 2, 3, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 5, 5, 2, 3, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 5, 6, 2, 3, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 5, 7, 2, 3, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 6, 4, 2, 3, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 6, 5, 2, 3, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 6, 6, 2, 3, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 6, 7, 2, 3, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 7, 4, 2, 3, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 7, 5, 2, 3, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 7, 6, 2, 3, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_zw_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_zw_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_zw_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_zw_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_zw_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111110);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(2, 3, 7, 7, 2, 3, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(2, 3, 2, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 4, 4, 3, 0, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 4, 5, 3, 0, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 4, 6, 3, 0, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 4, 7, 3, 0, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 5, 4, 3, 0, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 5, 5, 3, 0, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 5, 6, 3, 0, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 5, 7, 3, 0, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 6, 4, 3, 0, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 6, 5, 3, 0, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 6, 6, 3, 0, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 6, 7, 3, 0, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 7, 4, 3, 0, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 7, 5, 3, 0, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 7, 6, 3, 0, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wx_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wx_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wx_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wx_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wx_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 0, 7, 7, 3, 0, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 0, 3, 0)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00000111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 4, 4, 3, 1, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01000111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 4, 5, 3, 1, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10000111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 4, 6, 3, 1, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11000111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 4, 7, 3, 1, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00010111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 5, 4, 3, 1, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01010111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 5, 5, 3, 1, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10010111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 5, 6, 3, 1, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11010111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 5, 7, 3, 1, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00100111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 6, 4, 3, 1, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01100111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 6, 5, 3, 1, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10100111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 6, 6, 3, 1, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11100111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 6, 7, 3, 1, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00110111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 7, 4, 3, 1, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01110111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 7, 5, 3, 1, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10110111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 7, 6, 3, 1, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wy_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wy_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wy_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wy_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wy_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11110111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 1, 7, 7, 3, 1, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 1, 3, 1)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 4, 4, 3, 2, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 4, 5, 3, 2, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 4, 6, 3, 2, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 4, 7, 3, 2, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 5, 4, 3, 2, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 5, 5, 3, 2, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 5, 6, 3, 2, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 5, 7, 3, 2, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 6, 4, 3, 2, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 6, 5, 3, 2, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 6, 6, 3, 2, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 6, 7, 3, 2, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 7, 4, 3, 2, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 7, 5, 3, 2, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 7, 6, 3, 2, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_wz_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_wz_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_wz_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_wz_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_wz_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111011);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 2, 7, 7, 3, 2, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 2, 3, 2)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_xx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_xx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_xx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_xx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_xx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00001111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 4, 4, 3, 3, 4, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 0, 0, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_xy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_xy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_xy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_xy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_xy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01001111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 4, 5, 3, 3, 4, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 1, 0, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_xz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_xz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_xz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_xz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_xz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10001111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 4, 6, 3, 3, 4, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 2, 0, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_xw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_xw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_xw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_xw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_xw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11001111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 4, 7, 3, 3, 4, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(0, 3, 0, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_yx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_yx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_yx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_yx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_yx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00011111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 5, 4, 3, 3, 5, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 0, 1, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_yy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_yy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_yy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_yy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_yy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01011111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 5, 5, 3, 3, 5, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 1, 1, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_yz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_yz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_yz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_yz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_yz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10011111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 5, 6, 3, 3, 5, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 2, 1, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_yw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_yw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_yw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_yw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_yw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11011111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 5, 7, 3, 3, 5, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(1, 3, 1, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_zx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_zx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_zx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_zx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_zx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00101111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 6, 4, 3, 3, 6, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 0, 2, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_zy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_zy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_zy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_zy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_zy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01101111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 6, 5, 3, 3, 6, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 1, 2, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_zz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_zz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_zz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_zz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_zz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10101111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 6, 6, 3, 3, 6, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 2, 2, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_zw(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_zw(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_zw(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_zw(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_zw(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11101111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 6, 7, 3, 3, 6, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(2, 3, 2, 3)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_wx(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_wx(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_wx(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_wx(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_wx(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b00111111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 7, 4, 3, 3, 7, 4)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 0, 3, 0)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_wy(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_wy(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_wy(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_wy(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_wy(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b01111111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 7, 5, 3, 3, 7, 5)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 1, 3, 1)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_wz(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_wz(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_wz(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_wz(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_wz(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b10111111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 7, 6, 3, 3, 7, 6)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 2, 3, 2)).GetLower()
        );
    }

    [MethodImpl(256 | 512)]
    public static Vector128<int> Shuffle_ww_ww(Vector128<int> a, Vector128<int> b) =>
        Shuffle_ww_ww(a.AsSingle(), b.AsSingle()).AsInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<uint> Shuffle_ww_ww(Vector128<uint> a, Vector128<uint> b) =>
        Shuffle_ww_ww(a.AsSingle(), b.AsSingle()).AsUInt32();

    [MethodImpl(256 | 512)]
    public static Vector128<float> Shuffle_ww_ww(Vector128<float> a, Vector128<float> b)
    {
        if (Sse.IsSupported) return Sse.Shuffle(a, b, 0b11111111);
        if (Vector256.IsHardwareAccelerated)
            return Vector256.Shuffle(
                a.ToVector256().WithUpper(b),
                Vector256.Create(3, 3, 7, 7, 3, 3, 7, 7)
            ).GetLower();
        return Vector128.Create(
            Vector128.Shuffle(a, Vector128.Create(3, 3, 3, 3)).GetLower(), 
            Vector128.Shuffle(b, Vector128.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 4, 4, 0, 0, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 4, 5, 0, 0, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 4, 6, 0, 0, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 4, 7, 0, 0, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 5, 4, 0, 0, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 5, 5, 0, 0, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 5, 6, 0, 0, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 5, 7, 0, 0, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 6, 4, 0, 0, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 6, 5, 0, 0, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 6, 6, 0, 0, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 6, 7, 0, 0, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 7, 4, 0, 0, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 7, 5, 0, 0, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 7, 6, 0, 0, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xx_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xx_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xx_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xx_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xx_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 0, 7, 7, 0, 0, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 0, 0, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 4, 4, 0, 1, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 4, 5, 0, 1, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 4, 6, 0, 1, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 4, 7, 0, 1, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 5, 4, 0, 1, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 5, 5, 0, 1, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 5, 6, 0, 1, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 5, 7, 0, 1, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 6, 4, 0, 1, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 6, 5, 0, 1, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 6, 6, 0, 1, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 6, 7, 0, 1, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 7, 4, 0, 1, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 7, 5, 0, 1, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 7, 6, 0, 1, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xy_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xy_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xy_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xy_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xy_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 1, 7, 7, 0, 1, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 1, 0, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 4, 4, 0, 2, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 4, 5, 0, 2, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 4, 6, 0, 2, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 4, 7, 0, 2, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 5, 4, 0, 2, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 5, 5, 0, 2, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 5, 6, 0, 2, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 5, 7, 0, 2, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 6, 4, 0, 2, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 6, 5, 0, 2, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 6, 6, 0, 2, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 6, 7, 0, 2, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 7, 4, 0, 2, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 7, 5, 0, 2, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 7, 6, 0, 2, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xz_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xz_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xz_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xz_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xz_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 2, 7, 7, 0, 2, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 2, 0, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 4, 4, 0, 3, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 4, 5, 0, 3, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 4, 6, 0, 3, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 4, 7, 0, 3, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 5, 4, 0, 3, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 5, 5, 0, 3, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 5, 6, 0, 3, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 5, 7, 0, 3, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 6, 4, 0, 3, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 6, 5, 0, 3, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 6, 6, 0, 3, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 6, 7, 0, 3, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 7, 4, 0, 3, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 7, 5, 0, 3, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 7, 6, 0, 3, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_xw_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_xw_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_xw_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_xw_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_xw_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(0, 3, 7, 7, 0, 3, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(0, 3, 0, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 4, 4, 1, 0, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 4, 5, 1, 0, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 4, 6, 1, 0, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 4, 7, 1, 0, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 5, 4, 1, 0, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 5, 5, 1, 0, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 5, 6, 1, 0, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 5, 7, 1, 0, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 6, 4, 1, 0, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 6, 5, 1, 0, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 6, 6, 1, 0, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 6, 7, 1, 0, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 7, 4, 1, 0, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 7, 5, 1, 0, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 7, 6, 1, 0, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yx_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yx_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yx_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yx_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yx_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 0, 7, 7, 1, 0, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 0, 1, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 4, 4, 1, 1, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 4, 5, 1, 1, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 4, 6, 1, 1, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 4, 7, 1, 1, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 5, 4, 1, 1, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 5, 5, 1, 1, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 5, 6, 1, 1, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 5, 7, 1, 1, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 6, 4, 1, 1, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 6, 5, 1, 1, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 6, 6, 1, 1, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 6, 7, 1, 1, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 7, 4, 1, 1, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 7, 5, 1, 1, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 7, 6, 1, 1, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yy_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yy_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yy_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yy_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yy_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 1, 7, 7, 1, 1, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 1, 1, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 4, 4, 1, 2, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 4, 5, 1, 2, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 4, 6, 1, 2, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 4, 7, 1, 2, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 5, 4, 1, 2, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 5, 5, 1, 2, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 5, 6, 1, 2, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 5, 7, 1, 2, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 6, 4, 1, 2, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 6, 5, 1, 2, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 6, 6, 1, 2, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 6, 7, 1, 2, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 7, 4, 1, 2, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 7, 5, 1, 2, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 7, 6, 1, 2, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yz_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yz_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yz_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yz_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yz_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 2, 7, 7, 1, 2, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 2, 1, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 4, 4, 1, 3, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 4, 5, 1, 3, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 4, 6, 1, 3, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 4, 7, 1, 3, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 5, 4, 1, 3, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 5, 5, 1, 3, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 5, 6, 1, 3, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 5, 7, 1, 3, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 6, 4, 1, 3, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 6, 5, 1, 3, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 6, 6, 1, 3, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 6, 7, 1, 3, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 7, 4, 1, 3, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 7, 5, 1, 3, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 7, 6, 1, 3, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_yw_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_yw_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_yw_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_yw_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_yw_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(0, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(1, 3, 7, 7, 1, 3, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(1, 3, 1, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 4, 4, 2, 0, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 4, 5, 2, 0, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 4, 6, 2, 0, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 4, 7, 2, 0, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 5, 4, 2, 0, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 5, 5, 2, 0, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 5, 6, 2, 0, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 5, 7, 2, 0, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 6, 4, 2, 0, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 6, 5, 2, 0, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 6, 6, 2, 0, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 6, 7, 2, 0, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 7, 4, 2, 0, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 7, 5, 2, 0, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 7, 6, 2, 0, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zx_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zx_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zx_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zx_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zx_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 0, 7, 7, 2, 0, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 0, 2, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 4, 4, 2, 1, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 4, 5, 2, 1, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 4, 6, 2, 1, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 4, 7, 2, 1, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 5, 4, 2, 1, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 5, 5, 2, 1, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 5, 6, 2, 1, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 5, 7, 2, 1, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 6, 4, 2, 1, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 6, 5, 2, 1, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0100);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 6, 6, 2, 1, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 6, 7, 2, 1, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 7, 4, 2, 1, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 7, 5, 2, 1, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 7, 6, 2, 1, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zy_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zy_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zy_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zy_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zy_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1110);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 1, 7, 7, 2, 1, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 1, 2, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 4, 4, 2, 2, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 4, 5, 2, 2, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 4, 6, 2, 2, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 4, 7, 2, 2, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 5, 4, 2, 2, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 5, 5, 2, 2, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 5, 6, 2, 2, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 5, 7, 2, 2, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 6, 4, 2, 2, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 6, 5, 2, 2, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0000);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 6, 6, 2, 2, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 6, 7, 2, 2, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 7, 4, 2, 2, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 7, 5, 2, 2, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 7, 6, 2, 2, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zz_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zz_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zz_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zz_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zz_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1010);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 2, 7, 7, 2, 2, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 2, 2, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 4, 4, 2, 3, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 4, 5, 2, 3, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 4, 6, 2, 3, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 4, 7, 2, 3, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 5, 4, 2, 3, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 5, 5, 2, 3, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 5, 6, 2, 3, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 5, 7, 2, 3, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 6, 4, 2, 3, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 6, 5, 2, 3, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 6, 6, 2, 3, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 6, 7, 2, 3, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 7, 4, 2, 3, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 7, 5, 2, 3, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 7, 6, 2, 3, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_zw_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_zw_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_zw_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_zw_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_zw_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(2, 3, 7, 7, 2, 3, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(2, 3, 2, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 4, 4, 3, 0, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 4, 5, 3, 0, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 4, 6, 3, 0, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 4, 7, 3, 0, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 5, 4, 3, 0, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 5, 5, 3, 0, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 5, 6, 3, 0, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 5, 7, 3, 0, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 6, 4, 3, 0, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 6, 5, 3, 0, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0001);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 6, 6, 3, 0, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 6, 7, 3, 0, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 7, 4, 3, 0, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 7, 5, 3, 0, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 7, 6, 3, 0, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wx_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wx_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wx_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wx_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wx_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1011);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 0, 7, 7, 3, 0, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 0, 3, 0)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 4, 4, 3, 1, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 4, 5, 3, 1, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 4, 6, 3, 1, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 4, 7, 3, 1, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 5, 4, 3, 1, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 5, 5, 3, 1, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 5, 6, 3, 1, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 5, 7, 3, 1, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 6, 4, 3, 1, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 6, 5, 3, 1, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 6, 6, 3, 1, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 6, 7, 3, 1, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 7, 4, 3, 1, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 7, 5, 3, 1, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 7, 6, 3, 1, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wy_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wy_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wy_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wy_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wy_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 0, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 1, 7, 7, 3, 1, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 1, 3, 1)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 4, 4, 3, 2, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 4, 5, 3, 2, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 4, 6, 3, 2, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 4, 7, 3, 2, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 5, 4, 3, 2, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 5, 5, 3, 2, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 5, 6, 3, 2, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 5, 7, 3, 2, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 6, 4, 3, 2, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 6, 5, 3, 2, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 6, 6, 3, 2, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 6, 7, 3, 2, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 7, 4, 3, 2, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 7, 5, 3, 2, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 7, 6, 3, 2, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_wz_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_wz_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_wz_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_wz_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_wz_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 2, 7, 7, 3, 2, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 2, 3, 2)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_xx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_xx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_xx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_xx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_xx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 4, 4, 3, 3, 4, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 0, 0, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_xy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_xy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_xy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_xy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_xy(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 4, 5, 3, 3, 4, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 1, 0, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_xz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_xz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_xz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_xz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_xz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 4, 6, 3, 3, 4, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 2, 0, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_xw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_xw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_xw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_xw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_xw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 4, 7, 3, 3, 4, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(0, 3, 0, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_yx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_yx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_yx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_yx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_yx(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 5, 4, 3, 3, 5, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 0, 1, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_yy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_yy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_yy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_yy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_yy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 5, 5, 3, 3, 5, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 1, 1, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_yz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_yz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_yz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_yz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_yz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 5, 6, 3, 3, 5, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 2, 1, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_yw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_yw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_yw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_yw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_yw(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 1, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 5, 7, 3, 3, 5, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(1, 3, 1, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_zx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_zx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_zx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_zx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_zx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 6, 4, 3, 3, 6, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 0, 2, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_zy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_zy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_zy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_zy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_zy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 6, 5, 3, 3, 6, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 1, 2, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_zz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_zz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_zz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_zz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_zz(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0101);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 6, 6, 3, 3, 6, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 2, 2, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_zw(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_zw(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_zw(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_zw(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_zw(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 6, 7, 3, 3, 6, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(2, 3, 2, 3)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_wx(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_wx(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_wx(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_wx(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_wx(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b0111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 7, 4, 3, 3, 7, 4)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 0, 3, 0)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_wy(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_wy(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_wy(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_wy(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_wy(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 1)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 7, 5, 3, 3, 7, 5)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 1, 3, 1)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_wz(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_wz(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_wz(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_wz(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_wz(Vector256<double> a, Vector256<double> b)
    {
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 7, 6, 3, 3, 7, 6)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 2, 3, 2)).GetLower()
        );
    }
    
    [MethodImpl(256 | 512)]
    public static Vector256<long> Shuffle_ww_ww(Vector256<long> a, Vector256<long> b) =>
        Shuffle_ww_ww(a.AsDouble(), b.AsDouble()).AsInt64();
    
    [MethodImpl(256 | 512)]
    public static Vector256<ulong> Shuffle_ww_ww(Vector256<ulong> a, Vector256<ulong> b) =>
        Shuffle_ww_ww(a.AsDouble(), b.AsDouble()).AsUInt64();

    [MethodImpl(256 | 512)]
    public static Vector256<double> Shuffle_ww_ww(Vector256<double> a, Vector256<double> b)
    {
        if (Avx.IsSupported)
        {
            var r = Avx.Shuffle(a, b, 0b1111);
            return Vector256.Shuffle(r, Vector256.Create(2, 2, 3, 3)); 
        }
        if (Vector512.IsHardwareAccelerated)
            return Vector512.Shuffle(
                a.ToVector512().WithUpper(b),
                Vector512.Create(3, 3, 7, 7, 3, 3, 7, 7)
            ).GetLower();
        return Vector256.Create(
            Vector256.Shuffle(a, Vector256.Create(3, 3, 3, 3)).GetLower(), 
            Vector256.Shuffle(b, Vector256.Create(3, 3, 3, 3)).GetLower()
        );
    }
}
#endif
