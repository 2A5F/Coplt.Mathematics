<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../../types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics;
<#
    foreach (var typ in Typ.Typs)
    {
        for (var i = 2; i <= 4; i++)
        {
            var typeName = $"{typ.name}{i}";

            var byteSize = typ.size * (i is 3 ? 4 : i);
            var bitSize = 8 * byteSize;

            var ss = typ.size switch {
                2 => new[] { ("half", "f"), ("short", "i"), ("ushort", "u"), ("b16v", "b") },
                4 => new[] { ("float", "f"), ("int", "i"), ("uint", "u"), ("b32v", "b") },
                8 => new[] { ("double", "f"), ("long", "i"), ("ulong", "u"), ("b64v", "b") },
                _ => new (string, string)[] { }
                };
#>

#region <#= typeName #>

[Ex]
public static partial class math
{
<#
            foreach (var (target, name) in ss)
            {
                var tarName = $"{target}{i}";
                var tarType = target.Replace("v", "");
#>
    [MethodImpl(256 | 512)]
    public static <#= tarName #> as<#= name #>([This] <#= typeName #> v) => v.BitCast<<#= typeName #>, <#= tarName #>>();
<#
            }
#>
}

#endregion // <#= typeName #>
<#
        }
    }
#>
