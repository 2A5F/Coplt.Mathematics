<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../../types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics;
<#
    foreach (var typ in Typ.Typs)
    {
        for (var i = 2; i <= 4; i++)
        {
            var typeName = $"{typ.name}{i}";

            var byteSize = typ.size * (i is 3 ? 4 : i);
            var bitSize = 8 * byteSize;

            var ss = typ.size switch {
                2 => new[] { "half", "b16v" },
                4 => new[] { "float", "int", "uint", "b32v" },
                8 => new[] { "double", "long", "ulong", "b64v" },
                _ => new string[] { }
                };
#>

#region <#= typeName #>

[Ex]
public static partial class math
{
<#
            foreach (var target in ss)
            {
                var tarName = $"{target}{i}";
                var tarType = target.Replace("v", "");
#>
    [MethodImpl(256 | 512)]
    public static <#= tarName #> as<#= tarType #>([This] <#= typeName #> v) => v.BitCast<<#= typeName #>, <#= tarName #>>();
<#
            }
#>
}

#endregion // <#= typeName #>
<#
        }
    }
#>
