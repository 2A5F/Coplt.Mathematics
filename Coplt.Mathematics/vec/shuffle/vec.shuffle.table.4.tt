<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics;
<#
    foreach (var typ in Typ.Typs)
    {
        var byteSize4 = typ.size * 4;
        var bitSize4 = 8 * byteSize4;

        var typeName = $"{typ.name}4";
#>

public static partial class math
{
    /// <summary>
    /// Shuffle 2 vectors, a to low, b to high
    /// <code>
    /// example
    /// a (x0, y0, z0, w0)
    /// b (x1, y1, z1, w1)
    /// s yz zy
    /// r (y0, z0, z1, y1)
    /// </code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static <#= typeName #> shuffle(this <#= typeName #> a, <#= typeName #> b, Shuffle42 lh)
    {
<#
        if (typ.simd)
        {
#>
        #if NET8_0_OR_GREATER
        return new(simd_shuffle.Shuffle(a.vector, b.vector, lh));
        #else // NET8_0_OR_GREATER
<#
        }
#>
        return soft_shuffle.Shuffle<<#= typ.compType #>, <#= typeName #>>(a, b, lh);
<#
        if (typ.simd)
        {
#>
        #endif // NET8_0_OR_GREATER
<#
        }
#>
    }
}
<#
    }
#>
