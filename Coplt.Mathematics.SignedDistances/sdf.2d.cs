// generated by template, do not modify manually

namespace Coplt.Mathematics.SignedDistances;

public static partial class sdf
{

    #region float

    /// <summary>
    /// Calculate the distance to the circle
    /// </summary>
    /// <param name="p">Origin</param>
    /// <param name="c">Center of the circle</param>
    /// <param name="r">Radius of the circle</param>
    /// <returns>The distance from the origin to the circle</returns>
    [MethodImpl(256 | 512)]
    public static float circle(float2 p, float2 c, float r) => (p - c).length() - r;

    /// <summary>
    /// Calculate the distance to the segment
    /// </summary>
    /// <param name="p">Origin</param>
    /// <param name="a">Point A of the segment</param>
    /// <param name="b">Point B of the segment</param>
    /// <param name="r">Radius of the segment</param>
    /// <returns>The distance from the origin to the segment</returns>
    public static float segment(float2 p, float2 a, float2 b, float r = default)
    {
        var pa = p - a;
        var ba = b - a;
        var h = (pa.dot(ba) / ba.dot(ba)).clamp(0.0f, 1.0f);
        return (pa - ba * h).length() - r;
    }

    #endregion // float

    #region double

    /// <summary>
    /// Calculate the distance to the circle
    /// </summary>
    /// <param name="p">Origin</param>
    /// <param name="c">Center of the circle</param>
    /// <param name="r">Radius of the circle</param>
    /// <returns>The distance from the origin to the circle</returns>
    [MethodImpl(256 | 512)]
    public static double circle(double2 p, double2 c, double r) => (p - c).length() - r;

    /// <summary>
    /// Calculate the distance to the segment
    /// </summary>
    /// <param name="p">Origin</param>
    /// <param name="a">Point A of the segment</param>
    /// <param name="b">Point B of the segment</param>
    /// <param name="r">Radius of the segment</param>
    /// <returns>The distance from the origin to the segment</returns>
    public static double segment(double2 p, double2 a, double2 b, double r = default)
    {
        var pa = p - a;
        var ba = b - a;
        var h = (pa.dot(ba) / ba.dot(ba)).clamp(0.0, 1.0);
        return (pa - ba * h).length() - r;
    }

    #endregion // double

}
